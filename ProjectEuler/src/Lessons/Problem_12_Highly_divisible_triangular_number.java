package Lessons;

public class Problem_12_Highly_divisible_triangular_number {

	/*
	 * The sequence of triangle numbers is generated by adding the natural numbers. 
	 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

		1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

		Let us list the factors of the first seven triangle numbers:

	 	1: 1
	 	3: 1,3
	 	6: 1,2,3,6
		10: 1,2,5,10
		15: 1,3,5,15
		21: 1,3,7,21
		28: 1,2,4,7,14,28
		We can see that 28 is the first triangle number to have over five divisors.

		What is the value of the first triangle number to have over five hundred divisors?
	 */
	
	public static void main(String[] args) {
       
		int divisors = 0;
		int n = 0;
		int j = 0;
		
		while(divisors <= 500) {
			n++;
			divisors = 0;
			j = triCalcForumla(n);
			
			for(int i = 1; i <= Math.sqrt(j); i++) {
				if(j % i == 0) divisors++;
			}
			divisors *= 2;
			System.out.println(n + " : " + j + " : " + divisors);
		}
	}
	
	public static int triCalc(int num) {
		int total = 0;
		for(int i = 0; i <= num; i++) {
			total += i;
		}
		return total;
	}
	
	public static int triCalcRecursion(int n) {
		if(n == 0) 
			return 0;
		else 
			return n + triCalcRecursion(n - 1);
	}
	
	public static int triCalcForumla(int n) {
		return n*(n+1)/2;
	}
}
